version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 160596073886.dkr.ecr.us-east-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo $IMAGE_TAG > image_tag.txt

  build:
    commands:
      - IMAGE_TAG=$(cat image_tag.txt)
      - echo Build started on `date`
      - docker build -t flaskapp-ecs-demo:$IMAGE_TAG .
      - docker tag flaskapp-ecs-demo:$IMAGE_TAG 160596073886.dkr.ecr.us-east-1.amazonaws.com/flaskapp-ecs-demo:$IMAGE_TAG
      - docker tag flaskapp-ecs-demo:$IMAGE_TAG 160596073886.dkr.ecr.us-east-1.amazonaws.com/flaskapp-ecs-demo:latest

  post_build:
    commands:
      - IMAGE_TAG=$(cat image_tag.txt)
      - echo Build completed on `date`
      - echo Pushing Docker images...
      - docker push 160596073886.dkr.ecr.us-east-1.amazonaws.com/flaskapp-ecs-demo:$IMAGE_TAG
      - docker push 160596073886.dkr.ecr.us-east-1.amazonaws.com/flaskapp-ecs-demo:latest
      - echo Writing taskdef.json...
      - echo "{" > taskdef.json
      - echo "  \"family\": \"flaskapp-ecs-demo\"," >> taskdef.json
      - echo "  \"networkMode\": \"bridge\"," >> taskdef.json
      - echo "  \"containerDefinitions\": [" >> taskdef.json
      - echo "    {" >> taskdef.json
      - echo "      \"name\": \"flaskapp-ecs-demo\"," >> taskdef.json
      - echo "      \"image\": \"160596073886.dkr.ecr.us-east-1.amazonaws.com/flaskapp-ecs-demo:$IMAGE_TAG\"," >> taskdef.json
      - echo "      \"essential\": true," >> taskdef.json
      - echo "      \"memory\": 512," >> taskdef.json
      - echo "      \"cpu\": 256," >> taskdef.json
      - echo "      \"portMappings\": [{" >> taskdef.json
      - echo "        \"containerPort\": 80," >> taskdef.json
      - echo "        \"hostPort\": 80," >> taskdef.json
      - echo "        \"protocol\": \"tcp\"" >> taskdef.json
      - echo "      }]" >> taskdef.json
      - echo "    }" >> taskdef.json
      - echo "  ]," >> taskdef.json
      - echo "  \"requiresCompatibilities\": [\"EC2\"]," >> taskdef.json
      - echo "  \"executionRoleArn\": \"arn:aws:iam::160596073886:role/ecsTaskExecutionRole\"" >> taskdef.json
      - echo "}" >> taskdef.json
      - echo taskdef.json created:
      - cat taskdef.json

artifacts:
  files:
    - appspec.yml
    - taskdef.json
    - scripts/**/*
